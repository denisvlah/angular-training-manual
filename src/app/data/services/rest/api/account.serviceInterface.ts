/**
 * AngularCourse
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { HTTPValidationError } from '../model/models';
import { PageUserReadSchemaShort } from '../model/models';
import { UserReadSchema } from '../model/models';
import { UserReadSchemaShort } from '../model/models';
import { UserUpdateSchema } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface AccountServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Delete Me
     * 
     */
    deleteMeAccountMeDelete(extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Delete My Image
     * 
     */
    deleteMyImageAccountDeleteImageDelete(extraHttpRequestParams?: any): Observable<UserReadSchema>;

    /**
     * Get Account
     * 
     * @param accountId 
     */
    getAccountAccountAccountIdGet(accountId: number, extraHttpRequestParams?: any): Observable<any>;

    /**
     * Get Accounts
     * 
     * @param stack 
     * @param firstName 
     * @param lastName 
     * @param city 
     * @param orderBy 
     * @param page Page number
     * @param size Page size
     */
    getAccountsAccountAccountsGet(stack?: string, firstName?: string, lastName?: string, city?: string, orderBy?: string, page?: number, size?: number, extraHttpRequestParams?: any): Observable<PageUserReadSchemaShort>;

    /**
     * Get Me
     * 
     */
    getMeAccountMeGet(extraHttpRequestParams?: any): Observable<UserReadSchema>;

    /**
     * Get Subscribers
     * 
     * @param stack 
     * @param firstLastName 
     * @param city 
     * @param orderBy 
     * @param page Page number
     * @param size Page size
     */
    getSubscribersAccountSubscribersGet(stack?: string, firstLastName?: string, city?: string, orderBy?: string, page?: number, size?: number, extraHttpRequestParams?: any): Observable<PageUserReadSchemaShort>;

    /**
     * Get Subscriptions
     * 
     * @param stack 
     * @param firstName 
     * @param lastName 
     * @param city 
     * @param orderBy 
     * @param page Page number
     * @param size Page size
     */
    getSubscriptionsAccountSubscriptionsGet(stack?: string, firstName?: string, lastName?: string, city?: string, orderBy?: string, page?: number, size?: number, extraHttpRequestParams?: any): Observable<PageUserReadSchemaShort>;

    /**
     * Get Test Accounts
     * 
     */
    getTestAccountsAccountTestAccountsGet(extraHttpRequestParams?: any): Observable<Array<UserReadSchemaShort>>;

    /**
     * Load Image
     * 
     * @param image 
     */
    loadImageAccountUploadImagePost(image: Blob, extraHttpRequestParams?: any): Observable<UserReadSchema>;

    /**
     * Subscribe
     * 
     * @param accountId 
     */
    subscribeAccountSubscribeAccountIdPost(accountId: number, extraHttpRequestParams?: any): Observable<any>;

    /**
     * Unsubscribe
     * 
     * @param accountId 
     */
    unsubscribeAccountSubscribeAccountIdDelete(accountId: number, extraHttpRequestParams?: any): Observable<any>;

    /**
     * Update Me
     * 
     * @param userUpdateSchema 
     */
    updateMeAccountMePatch(userUpdateSchema: UserUpdateSchema, extraHttpRequestParams?: any): Observable<UserReadSchema>;

}
